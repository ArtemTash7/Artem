import random
import re
import sqlite3
import time

import telebot
from telebot import types

BOT_TOKEN = '–í–∞—à —Ç–æ–∫–µ–Ω'  # –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(BOT_TOKEN)

DATABASE_FILE = 'casino.db'  # –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

BONUS_COOLDOWN = 3600  # 3600 —Å–µ–∫—É–Ω–¥ = 1 —á–∞—Å (–Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ —Å–≤–æ–µ–º—É —É—Å–º–æ—Ç—Ä–µ–Ω–∏—é)
BONUS_MIN = 1000  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å
BONUS_MAX = 10000 # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å


# –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
class CasinoDB:
    def __init__(self, db_file):
        self.conn = sqlite3.connect(db_file)
        self.cursor = self.conn.cursor()
        self.cursor.execute('''
            CREATE TABLE IF NOT EXISTS users (
                id INTEGER PRIMARY KEY,
                balance REAL DEFAULT 0.0,
                last_bonus INTEGER DEFAULT 0
            )
        ''')
        self.conn.commit()

    def get_balance(self, user_id):
        self.cursor.execute("SELECT balance FROM users WHERE id = ?", (user_id,))
        result = self.cursor.fetchone()
        return result[0] if result else 0.0

    def get_last_bonus(self, user_id):
        self.cursor.execute("SELECT last_bonus FROM users WHERE id = ?", (user_id,))
        result = self.cursor.fetchone()
        return result[0] if result else 0

    def update_balance(self, user_id, amount):
        try:
            self.cursor.execute("UPDATE users SET balance = balance + ? WHERE id = ?", (amount, user_id))
            self.conn.commit()
            return True
        except sqlite3.Error as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞: {e}")
            return False

    def update_last_bonus(self, user_id):
        try:
            self.cursor.execute("UPDATE users SET last_bonus = ? WHERE id = ?", (int(time.time()), user_id))
            self.conn.commit()
            return True
        except sqlite3.Error as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è last_bonus: {e}")
            return False

    def add_user(self, user_id):
        try:
            self.cursor.execute("INSERT INTO users (id, balance) VALUES (?, ?)", (user_id, 0.0))
            self.conn.commit()
            return True
        except sqlite3.Error as e:
            print(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            return False

    def close(self):
        self.conn.close()


answer = ["–ë–µ—Å—Å–ø–æ—Ä–Ω–æ", "–ü—Ä–µ–¥—Ä–µ—à–µ–Ω–æ", "–ù–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π", "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞", "–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º",
          "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è - –¥–∞", "–í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ", "–•–æ—Ä–æ—à–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã", "–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - –¥–∞", "–î–∞",
          "–ü–æ–∫–∞ –Ω–µ—è—Å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞", "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ", "–õ—É—á—à–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å",
          "–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å", "–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –∏ —Å–ø—Ä–æ—Å–∏ –æ–ø—è—Ç—å", "–î–∞–∂–µ –Ω–µ –¥—É–º–∞–π",
          "–ú–æ–π –æ—Ç–≤–µ—Ç - –Ω–µ—Ç", "–ü–æ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º - –Ω–µ—Ç",
          "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ", "–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ"]


@bot.message_handler(commands=["play", "–∫–æ–º–∞–Ω–¥—ã", "command"])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
    btn2 = types.KeyboardButton("–ö–∞–∑–∏–Ω–æ")
    btn3 = types.KeyboardButton("–ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä")
    btn4 = types.KeyboardButton("/help")
    markup.add(btn1), markup.add(btn2), markup.add(btn3), markup.add(btn4)
    bot.send_message(message.chat.id, "–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n1Ô∏è‚É£–ü—Ä–æ—Ñ–∏–ª—å\n2Ô∏è‚É£–ö–∞–∑–∏–Ω–æ\n3Ô∏è‚É£–ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä", reply_markup=markup)


@bot.message_handler(commands=['help'])
def help_command(message):
    help_text = """<b>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –¥–æ—Ä–æ–≥–∏–µ –∏–≥—Ä–æ–∫–∏!</b>

–° –≤–µ–ª–∏—á–∞–π—à–∏–º —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é –≤–∞–º –º–æ—é –Ω–æ–≤—É—é –∏–∑—ã—Å–∫–∞–Ω–Ω—É—é –∏–≥—Ä—É –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º "TashGames". –í —ç—Ç–æ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–µ —è —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º —Ä–∞—Å–∫—Ä–æ—é –ø–µ—Ä–µ–¥ –≤–∞–º–∏ —Ç–æ–Ω–∫–æ—Å—Ç–∏ –∏ –Ω—é–∞–Ω—Å—ã —ç—Ç–æ–≥–æ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–≥–æ –±–æ—Ç–∞, –∞ —Ç–∞–∫–∂–µ –ø–æ–≤–µ–¥–∞—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–º –∫–æ–º–∞–Ω–¥–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–∫—Ä–æ—é—Ç –ø–µ—Ä–µ–¥ –≤–∞–º–∏ –¥–≤–µ—Ä–∏ –≤ –º–∏—Ä –±–µ–∑–≥—Ä–∞–Ω–∏—á–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.

<b>–ü—Ä–æ—Ñ–∏–ª—å:</b> –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–∞–º –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –ª–∏—á–Ω–æ–º—É –ø—Ä–æ—Ñ–∏–ª—é, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–π –Ω–∏–∫, —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –∏ —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å.

<b>–ö–∞–∑–∏–Ω–æ:</b> –≠—Ç–∞ –∏–≥—Ä–∞, —Å–ª–æ–≤–Ω–æ —Ä—É–ª–µ—Ç–∫–∞ —Å—É–¥—å–±—ã, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–∞–º —à–∞–Ω—Å –∏—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É. –í–≤–µ–¥–∏—Ç–µ `–∫–∞–∑–∏–Ω–æ [—Å—É–º–º–∞]` —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É. –í —Å–ª—É—á–∞–µ –≤—ã–∏–≥—Ä—ã—à–∞ –≤—ã —É–¥–≤–æ–∏—Ç–µ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É, –∞ –≤ —Å–ª—É—á–∞–µ –ø–æ—Ä–∞–∂–µ–Ω–∏—è ‚Äî –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –µ—ë. –í –±—É–¥—É—â–µ–º —è –ø–ª–∞–Ω–∏—Ä—É—é –æ–±–æ–≥–∞—Ç–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —ç—Ç–æ–π –∏–≥—Ä—ã, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –µ—â–µ –±–æ–ª–µ–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –∏ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º.

<b>–ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä:</b> –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–¥–∞—Ä–∏—Ç –≤–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–≥–ª—è–Ω—É—Ç—å –≤ –±—É–¥—É—â–µ–µ, —Å–ª–æ–≤–Ω–æ —Å –ø–æ–º–æ—â—å—é –≤–æ–ª—à–µ–±–Ω–æ–π —Ö—Ä—É—Å—Ç–∞–ª—å–Ω–æ–π —Å—Ñ–µ—Ä—ã. –í–≤–µ–¥–∏—Ç–µ `–º–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä` –∏ –∑–∞—Ç–µ–º –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å. –û–¥–Ω–∞–∫–æ –Ω–µ —Å—Ç–æ–∏—Ç –∑–∞–±—ã–≤–∞—Ç—å, —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å –±—É–¥–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–º, –∫–∞–∫ –µ—Å–ª–∏ –±—ã –≤—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π —Ü—ã–≥–∞–Ω–∫–µ –Ω–∞ –≤–æ–∫–∑–∞–ª–µ.

<b>–ë–∞–ª–∞–Ω—Å:</b> –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —É–∑–Ω–∞—Ç—å –≤–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏. –í–≤–µ–¥–∏—Ç–µ `–±–∞–ª–∞–Ω—Å`.

<b>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ (/help):</b> –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

<b>–ñ–µ–ª–∞—é –≤–∞–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ–≥–æ –≤—Ä–µ–º—è–ø—Ä–µ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è –≤ "TashGames"!</b>"""
    bot.send_message(message.chat.id, help_text, parse_mode='html')


@bot.message_handler(commands=['commands'])
def commands_command(message):
    bot.send_message(message.chat.id, message)


@bot.message_handler(commands=['casino'])
def handle_casino(message):
    user_id = message.from_user.id
    db = CasinoDB(DATABASE_FILE)
    if not db.get_balance(user_id):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db.add_user(user_id)
    balance = db.get_balance(user_id)
    db.close()
    bot.reply_to(message, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ! –í–∞—à –±–∞–ª–∞–Ω—Å: {balance:.2f}")


@bot.message_handler(func=lambda message: message.text.lower() == "–∫–∞–∑–∏–Ω–æ")
def handle_casino_text(message):
    bot.send_message(message.chat.id, f"{message.from_user.username}, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ¬´–∫–∞–∑–∏–Ω–æ [—Å—É–º–º–∞]¬ª ‚ùå")


@bot.message_handler(func=lambda message: message.text.lower() == '–ø—Ä–æ—Ñ–∏–ª—å')
def profile(message):
    user_id = message.from_user.id
    db = CasinoDB(DATABASE_FILE)
    balance = db.get_balance(user_id)
    db.close()
    bot.send_message(message.chat.id,
                     f'{message.from_user.username}, –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n'
                     f'<b>üîé ID:</b> {message.from_user.id}\n'
                     f'<b>üí∞ –ë–∞–ª–∞–Ω—Å:</b> {balance:.2f}‚ÇΩ\n'
                     f'<b>üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: [SOON]</b>',
                     parse_mode='html')

@bot.message_handler(func=lambda message: message.text.lower() == '–±–∞–ª–∞–Ω—Å')
def balance(message):
    user_id = message.from_user.id
    db = CasinoDB(DATABASE_FILE)
    balance = db.get_balance(user_id)
    db.close()
    bot.send_message(message.chat.id, f'<b>üí∞ –ë–∞–ª–∞–Ω—Å:</b> {balance:.2f}‚ÇΩ', parse_mode='html')


@bot.message_handler(func=lambda message: message.text.lower() == "–º–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä")
def magic_ball(message):
    bot.send_message(message.chat.id, "–ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å!")
    bot.register_next_step_handler(message, process_question)


def process_question(message):
    if re.fullmatch(r"[\w\s\?]*", message.text):
        bot.send_message(message.chat.id, random.choice(answer))
    else:
        bot.send_message(message.chat.id,
                         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –∑–Ω–∞–∫–∏ –≤–æ–ø—Ä–æ—Å–∞")


@bot.message_handler(func=lambda message: re.match(r"^–∫–∞–∑–∏–Ω–æ\s+(\d+(\.\d+)?)$", message.text, re.IGNORECASE))
def handle_casino_bet(message):
    try:
        match = re.match(r"^–∫–∞–∑–∏–Ω–æ\s+(\d+(\.\d+)?)$", message.text, re.IGNORECASE)
        bet_amount = float(match.group(1))

        user_id = message.from_user.id
        db = CasinoDB(DATABASE_FILE)  # –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–¥–µ—Å—å

        if not db.get_balance(user_id):
            db.add_user(user_id)
        balance = db.get_balance(user_id)

        if bet_amount > balance:
            bot.reply_to(message, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!")
        elif bet_amount <= 0:
            bot.reply_to(message, "–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è!")
        else:
            result = random.choice(['win', 'lose'])
            if result == 'win':
                winnings = bet_amount
                db.update_balance(user_id, winnings)
                bot.reply_to(message, f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {db.get_balance(user_id):.2f}‚ÇΩ")
            else:
                db.update_balance(user_id, -bet_amount)
                bot.reply_to(message, f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {db.get_balance(user_id):.2f}‚ÇΩ")

        db.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–¥–µ—Å—å

    except ValueError:
        bot.reply_to(message, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Ç–∞–≤–∫–∏. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –ø–æ—Å–ª–µ —Å–ª–æ–≤–∞ '–∫–∞–∑–∏–Ω–æ'.")
    except Exception as e:
        bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


@bot.message_handler(commands=['bonus'])
def handle_bonus(message):
    user_id = message.from_user.id
    db = CasinoDB(DATABASE_FILE)
    if not db.get_balance(user_id):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db.add_user(user_id)
    last_bonus = db.get_last_bonus(user_id)
    current_time = int(time.time())

    if current_time - last_bonus >= BONUS_COOLDOWN:
        bonus_amount = random.randint(BONUS_MIN, BONUS_MAX)
        if db.update_balance(user_id, bonus_amount) and db.update_last_bonus(user_id):
            bot.reply_to(message,
                         f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å –≤ —Ä–∞–∑–º–µ—Ä–µ {bonus_amount}‚ÇΩ! "
                         f"–í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {db.get_balance(user_id):.2f}‚ÇΩ")
        else:
            bot.reply_to(message, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–∞.")
    else:
        time_left = BONUS_COOLDOWN - (current_time - last_bonus)
        bot.reply_to(message, f"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –±–æ–Ω—É—Å —á–µ—Ä–µ–∑ {time_left} —Å–µ–∫—É–Ω–¥.")
    db.close()


bot.infinity_polling()
